openapi: 3.1.0
info:
  title: FastAPI
  version: 0.1.0
paths:
  /user/me:
    get:
      summary: User Info
      operationId: user_info_user_me_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
      - OAuth2PasswordBearer: []
  /user/{user_login}:
    get:
      summary: Find User
      operationId: find_user_user__user_login__get
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: user_login
        in: path
        required: true
        schema:
          type: string
          title: User Login
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /user:
    post:
      summary: Create User
      operationId: create_user_user_post
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: username
        in: query
        required: true
        schema:
          type: string
          title: Username
      - name: email
        in: query
        required: true
        schema:
          type: string
          title: Email
      - name: password
        in: query
        required: true
        schema:
          type: string
          title: Password
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    User:
      properties:
        username:
          type: string
          title: Username
        email:
          anyOf:
          - type: string
          - type: 'null'
          title: Email
        disabled:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Disabled
      type: object
      required:
      - username
      title: User
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
  securitySchemes:
    OAuth2PasswordBearer:
      type: oauth2
      flows:
        password:
          scopes: {}
          tokenUrl: http://127.0.0.1:5001/token
