# test postgres container
volumes:
  program-engineering-postgres-database:

services:
  db:
    image: postgres:14
    restart: always
    shm_size: 10mb
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      # POSTGRES_DB: users
      # POSTGRES_HOST_AUTH_METHOD: trust # https://stackoverflow.com/a/78540259

    # https://docs.docker.com/engine/storage/volumes/#start-a-container-with-a-volume
    # If you start a container with a volume that doesn't yet exist,
    # Docker creates the volume for you.
    # https://docs.docker.com/engine/storage/volumes/#use-a-volume-with-docker-compose
    # Running docker compose up for the first time creates a volume.
    # Docker reuses the same volume when you run the command subsequently.
    volumes: #[<volume-name>:]<mount-path>[:opts]
      - program-engineering-postgres-database:/var/lib/postgresql/data
    ports:
      - 5004:5432
    healthcheck: # https://stackoverflow.com/a/79403018
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    entrypoint: [ "/bin/bash", "-c", "
      docker-entrypoint.sh postgres &
      until pg_isready -U postgres; do sleep 3; done &&
      psql -U postgres -c 'DROP DATABASE IF EXISTS users;' || true &&
      psql -U postgres -c 'DROP DATABASE IF EXISTS passwords;' || true &&
      psql -U postgres -c 'CREATE DATABASE users;' || true &&
      psql -U postgres -c 'CREATE DATABASE passwords;' || true &&
      wait"
    ]
